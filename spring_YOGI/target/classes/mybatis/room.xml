<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="room">
	<resultMap type="RoomDTO" id="roomMap">
    	<result property="rnum" column="rnm"/>
    	<result property="rtype" column="rty"/>
    	<result property="acperson" column="acperson"/>
    	<result property="adperson" column="adperson"/>
    	<result property="rfname" column="rfn"/>
    	<result property="rinfo" column="rinfo"/>
    	<result property="hnum" column="hnum"/>
    	<result property="rprice" column="rpr"/>
    	<result property="rrate" column="rra"/>
    	<result property="hdto.hname" column="hna"/>
    	<result property="hdto.hstar" column="hst"/>
    </resultMap>

	<insert id="create" parameterType="RoomDTO">
		insert into room(rnum, rtype,
		rprice, rrate, acperson, adperson, rfname, rinfo, hnum)
		values(seq_rnum.nextval, #{rtype},
		#{rprice}, #{rrate}, #{acperson},
		#{adperson}, #{rfname}, #{rinfo}, #{hnum})
	</insert>

	<select id="rread" parameterType="Map" resultType="RoomDTO">
		select rnum, rtype, rprice, rrate,
		acperson, adperson, rfname, rinfo
		from room
		where hnum = #{hnum} and rnum = #{rnum}
	</select>
	
	<select id="read" parameterType="int" resultType="RoomDTO">
		select rnum, rtype, rprice, rrate,
		acperson, adperson, rfname, rinfo
		from room
		where rnum = #{rnum}
	</select>

	<update id="update" parameterType="RoomDTO">
		update room
		set rtype = #{rtype},
			rprice = #{rprice},
			rrate = #{rrate},
			acperson = #{acperson},
			adperson = #{adperson},
			rfname = #{rfname},
			rinfo = #{rinfo}
		where hnum = #{hnum} and rnum = #{rnum}
	</update>

	<select id="list" resultMap="roomMap" parameterType="Map">
		select rnm, rty, rpr, rra, rfn, hna, hst, hnum, rn
		from(
			select rnm, rty, rpr, rra, rfn, hna, hst, hnum, rownum as rn
			from (
				select r.rnum as rnm, r.rtype as rty, r.rprice as rpr, r.rrate as rra, r.rfname as rfn, h.hname as hna, h.hstar as hst, r.hnum as hnum
				from room r, hotel h
				<where> r.hnum=h.hnum
		        and r.rnum not in(
		                select rnum
		                from room r , booking_room b
		                where r.rnum = b.rnum_FK
		                and 
						<choose>
							<when test="(sdate=='' or sdate==null) and (edate=='' or edate==null)">
								<![CDATA[ 
		                		( to_date(b.endDate,'yyyy-mm-dd')>to_date(sysdate,'yyyy-mm-dd') and to_date(b.startDate,'yyyy-mm-dd')<=to_date(sysdate + 1,'yyyy-mm-dd'))
		               			 ]]>
							</when>
							<otherwise>								                
				                <![CDATA[ 
				                ( to_date(b.endDate,'yyyy-mm-dd')>to_date(#{sdate},'yyyy-mm-dd') and to_date(b.startDate,'yyyy-mm-dd')<=to_date(#{edate},'yyyy-mm-dd'))
				                ]]>
				            </otherwise>
		                </choose>
		        ) 
	            and
				<choose>
					<when test="type=='스탠다드룸'">
						r.rtype = #{type}
					</when>
					<when test="type=='디럭스룸'">
						r.rtype = #{type}
					</when>
					<when test="type=='패밀리룸'">
						r.rtype = #{type}
					</when>
					<when test="type=='스위트룸'">
						r.rtype = #{type}
					</when>
					<otherwise>
						r.rtype like '%'||#{type}||'%'
					</otherwise>
					
				</choose>
				
				<choose>
					<when test="srprice!=null and erprice!=null">
						<![CDATA[ 
						and r.rprice * (1 - r.rrate) >= #{srprice}  
			            and r.rprice * (1 - r.rrate) <= #{erprice}
		           		]]>	
					</when>
				</choose>
				
				<choose>
					<when test="rperson!=null">
						<![CDATA[ 
		           		and r.acperson + r.adperson >= #{rperson}
		           		]]>
           			</when>
           		</choose>
           		</where>
			ORDER BY r.rnum DESC
			)
		)                                                                            
   <![CDATA[                                                                        
   where rn>=#{sno} and rn<=#{eno}  
   ]]>
	</select>

	<select id="rlist" resultMap="roomMap" parameterType="Map">
		select rnm, rty, rpr, rra, rfn, hna, hst, rn
		from(
			select rnm, rty, rpr, rra, rfn, hna, hst, rownum as rn
			from (
				select r.rnum as rnm, r.rtype as rty, r.rprice as rpr, r.rrate as rra, r.rfname as rfn, h.hname as hna, h.hstar as hst
				from room r, hotel h
				where r.hnum=h.hnum and h.hid = #{hid}
		        
			ORDER BY r.rnum DESC
			)
		)                                                                            
   <![CDATA[                                                                        
   where rn>=#{sno} and rn<=#{eno}  
   ]]>
	</select>


	<select id="total" parameterType="Map" resultType="int">
		select count(*) cnt from room r, hotel h
		<where> r.hnum=h.hnum
		        and r.rnum not in(
		                select rnum
		                from room r , booking_room b
		                where r.rnum = b.rnum_FK
		                and 
						<choose>
							<when test="(sdate=='' or sdate==null) and (edate=='' or edate==null)">
								<![CDATA[ 
		                		( to_date(b.endDate,'yyyy-mm-dd')>to_date(sysdate,'yyyy-mm-dd') and to_date(b.startDate,'yyyy-mm-dd')<=to_date(sysdate + 1,'yyyy-mm-dd'))
		               			 ]]>
							</when>
							<otherwise>								                
				                <![CDATA[ 
				                ( to_date(b.endDate,'yyyy-mm-dd')>to_date(#{sdate},'yyyy-mm-dd') and to_date(b.startDate,'yyyy-mm-dd')<=to_date(#{edate},'yyyy-mm-dd'))
				                ]]>
				            </otherwise>
		                </choose>
		        ) 
	            and
				<choose>
					<when test="type=='스탠다드룸'">
						r.rtype = #{type}
					</when>
					<when test="type=='디럭스룸'">
						r.rtype = #{type}
					</when>
					<when test="type=='패밀리룸'">
						r.rtype = #{type}
					</when>
					<when test="type=='스위트룸'">
						r.rtype = #{type}
					</when>
					<otherwise>
						r.rtype like '%'||#{type}||'%'
					</otherwise>
					
				</choose>
				
				<choose>
					<when test="srprice!=null and erprice!=null">
						<![CDATA[ 
						and r.rprice * (1 - r.rrate) >= #{srprice}  
			            and r.rprice * (1 - r.rrate) <= #{erprice}
		           		]]>	
					</when>
				</choose>
				
				<choose>
					<when test="rperson!=null">
						<![CDATA[ 
		           		and r.acperson + r.adperson >= #{rperson}
		           		]]>
           			</when>
           		</choose>
           		</where>
	</select>

	<select id="rtotal" parameterType="Map" resultType="int">
		select count(*) cnt from room r, hotel h
		where r.hnum=h.hnum and h.hid = #{hid}
	</select>

</mapper>

